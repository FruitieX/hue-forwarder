const Hapi = require('hapi');
const request = require('request');

require('dotenv').config();

// Autogenerated config fields
process.env.SERIAL_NUMBER = process.env.FORWARDER_MAC.replace(/:/g, '');
process.env.BRIDGE_ID = [
  process.env.SERIAL_NUMBER.slice(0, 6),
  'fffe',
  process.env.SERIAL_NUMBER.slice(6)
].join('').toUpperCase();

// Server setup
const server = new Hapi.Server();
server.connection({ port: process.env.FORWARDER_PORT });

const doForward = (req, cb) =>
  request(
    {
      url: `http://${process.env.HUE_IP}${req.url.path}`,
      method: req.method,
      headers: req.headers,
      body: req.payload && JSON.stringify(req.payload),
    },
    cb,
  );

// "Catch-all" route
server.route({
  method: '*',
  path: '/{p*}',
  handler: (req, reply) => {
    //console.log(`Forwarding: ${req.method} ${req.url.path}`);

    doForward(req, (err, hueRes) => {
      reply(
        hueRes.headers['content-type'] === 'application/json'
        ? JSON.parse(hueRes.body)
        : hueRes.body,
      );
    });
  }
});

// Load any plugins
server.register(
  [
    require('./plugins/ssdp-discovery'),
    require('./plugins/config-spoofer'),
    {
      register: require('./plugins/scene-spy'),
      options: { groups: [ 0, 1 ] }
    }
  ], (err) => {
    if (err) {
      console.error('Failed to load a plugin:', err);
    }

    server.start(err => {
      if (err) {
        throw err;
      }
      console.log(`Server running at: ${server.info.uri}`);
    });
  }
);
